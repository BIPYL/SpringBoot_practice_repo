package org.fastcampus.springstarter.entity;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.context.annotation.Primary;

import java.time.LocalDateTime;
import java.util.List;


@Entity
@Getter
@Setter
@NoArgsConstructor
public class Book {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String subject;
    private int price;
    private String author;
    private int page;
    private LocalDateTime createdAt; // 클래스: 카멜케이스(표기법).  db(테이블) 컬럼명: 스테이크케이스(표기법)


    //review 테이블 정보 여러개를 가져올 수 있는 구조, 리스트로 설정.
    // review의 "book" 필드와 연관되어 있다.
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL) //책 하나에 리뷰 여러개 관계// book_id는 컬럼명이므로 값인 review의 book을 직접 연결.
    private List<Review> reviews; //리뷰 담을 구조를 리스트로 설정. Book 테이블이 만들어질 때 컬럼으로 만들어 질 수 없으므로 리스트 사용.


}


/*
Hibernate:
    create table book (
        page integer not null,
        price integer not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        author varchar(255),
        subject varchar(255),
        primary key (id)
    )
Hibernate:
    create table review (
        rating integer not null,
        book_id bigint,
        created_at timestamp(6),
        id bigint generated by default as identity,
        content varchar(255),
        primary key (id)
    )

//제약조건 설정(테이블 관계 설정)
Hibernate:
    alter table if exists review
       add constraint FK70yrt09r4r54tcgkrwbeqenbs //임의이름의 제약조건 생성.
       foreign key (book_id)
       references book  //외래키가 book(id)를 참조.
 */